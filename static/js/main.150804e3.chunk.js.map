{"version":3,"sources":["components/Component1.js","components/Component2.js","components/Component3.js","App.js","index.js"],"names":["Component1","from","opacity","marginTop","to","props","style","c1Style","number","config","duration","counter","toFixed","background","color","padding","textAlign","width","borderRadius","margin","Component2","delay","c2Style","btn","onClick","toggle","Component","border","textTransform","cursor","Component3","c3Style","App","state","showComponent3","e","setState","className","this","native","items","enter","leave","show","div","React","ReactDOM","render","document","getElementById"],"mappings":"2QAGe,SAASA,IACpB,OACI,kBAAC,SAAD,CACIC,KAAM,CAAEC,QAAS,EAAGC,WAAY,KAChCC,GAAI,CAAEF,QAAS,EAAGC,UAAU,KAE1B,SAAAE,GAAK,OACH,yBAAKC,MAAOD,GACR,yBAAKC,MAAOC,GACR,2CACA,ktBAIA,kBAAC,SAAD,CACIN,KAAM,CAAEO,OAAQ,GAChBJ,GAAI,CAAEI,OAAQ,IACdC,OAAQ,CAACC,SAAU,OAEjB,SAAAL,GAAK,OAEH,yBAAKC,MAAOD,GACR,wBAAIC,MAAOK,GACNN,EAAMG,OAAOI,oBAYtD,IAAML,EAAU,CACZM,WAAY,YACZC,MAAO,QACPC,QAAS,UAGPJ,EAAU,CACZE,WAAW,OACXG,UAAW,SACXC,MAAO,QACPC,aAAc,QACdC,OAAQ,aCrBGC,EAzBf,iLACc,IAAD,OACL,OACI,kBAAC,SAAD,CACInB,KAAM,CAAEC,QAAS,GACjBE,GAAI,CAAEF,QAAS,GACfO,OAAQ,CAAEY,MAAM,IAAMX,SAAU,OAE9B,SAAAL,GAAK,OACH,yBAAKC,MAAOD,GACR,yBAAKC,MAAOgB,GACR,2CACA,ktBAIJ,4BAAQhB,MAAOiB,EAAKC,QAAS,EAAKnB,MAAMoB,QAAxC,+BAhBxB,GAAgCC,aA6B1BJ,EAAU,CACZT,WAAY,YACZC,MAAO,QACPC,QAAS,UAGPQ,EACN,CACIV,WAAY,OACZC,MAAO,OACPC,QAAS,YACTY,OAAQ,OACRC,cAAe,YACfT,OAAQ,SACRU,OAAQ,WC5CG,SAASC,IACpB,OACI,yBAAKxB,MAAOyB,GACR,2CACA,qOAQZ,IAAMA,EAAU,CACZlB,WAAY,YACZC,MAAO,QACPC,QAAS,UCyBEiB,G,iNAjCbC,MAAQ,CACNC,gBAAgB,G,EAGlBT,OAAS,SAAAU,GAEP,EAAKC,SAAS,CAAEF,gBAAiB,EAAKD,MAAMC,kB,wEAI5C,OACE,yBAAKG,UAAU,OACb,kBAACrC,EAAD,MACA,kBAAC,EAAD,CAAYyB,OAAQa,KAAKb,SACzB,kBAAC,aAAD,CACEc,QAAM,EACNC,MAAQF,KAAKL,MAAMC,eACnBjC,KAAM,CAACC,QAAS,GAChBuC,MAAO,CAACvC,QAAS,GACjBwC,MAAO,CAACxC,QAAS,KAEhB,SAAAyC,GAAI,OAAIA,GAAS,SAAAtC,GAAK,OACrB,kBAAC,WAASuC,IAAV,CAActC,MAAOD,GACnB,kBAACyB,EAAD,gB,GAzBIe,IAAMnB,YCAxBoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.150804e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nexport default function Component1() {\r\n    return (\r\n        <Spring\r\n            from={{ opacity: 0, marginTop: -500 }}\r\n            to={{ opacity: 1, marginTop:0 }}\r\n        >\r\n            { props => (\r\n                <div style={props}>                    \r\n                    <div style={c1Style}>\r\n                        <h1>Component 1</h1>\r\n                        <p>loremNulla enim aliquip velit nostrud ut eu. Nisi ipsum do anim eu enim ad aliquip velit pariatur culpa. Sint esse dolor aliqua voluptate minim deserunt ipsum.\r\n\r\n                        Non esse proident aute Lorem do. Aliquip cillum aliqua Lorem velit officia Lorem nostrud deserunt ea. Nisi velit voluptate sit fugiat amet aliqua velit pariatur sunt in. Dolor labore irure aute ea sint consectetur sit exercitation aliquip pariatur fugiat. Non amet culpa eu eu ex qui dolor cillum culpa id esse voluptate dolor aute. Est consectetur nulla consectetur incididunt anim laboris exercitation incididunt qui cillum culpa eu. Nisi reprehenderit occaecat ex elit voluptate incididunt minim fugiat deserunt proident dolore.</p>\r\n\r\n                        <Spring\r\n                            from={{ number: 0 }}\r\n                            to={{ number: 10 }}\r\n                            config={{duration: 10000}}\r\n                        >\r\n                            { props => (\r\n\r\n                                <div style={props}>\r\n                                    <h1 style={counter}>\r\n                                        {props.number.toFixed()}\r\n                                    </h1>\r\n                                </div>\r\n                            )}\r\n                        </Spring>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Spring>\r\n    )\r\n}\r\n\r\nconst c1Style = {\r\n    background: 'steelblue',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n}\r\n\r\nconst counter = {\r\n    background:'#333',\r\n    textAlign: 'center',\r\n    width: '100px',\r\n    borderRadius: '100px',\r\n    margin: '1rem auto'\r\n}","import React, { Component } from 'react'\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nexport class Component2 extends Component {\r\n    render() {\r\n        return (\r\n            <Spring\r\n                from={{ opacity: 0, }}\r\n                to={{ opacity: 1 }}\r\n                config={{ delay:1000, duration: 1000 }}\r\n            >\r\n                { props => (\r\n                    <div style={props}>                    \r\n                        <div style={c2Style}>\r\n                            <h1>Component 1</h1>\r\n                            <p>loremNulla enim aliquip velit nostrud ut eu. Nisi ipsum do anim eu enim ad aliquip velit pariatur culpa. Sint esse dolor aliqua voluptate minim deserunt ipsum.\r\n\r\n                Non esse proident aute Lorem do. Aliquip cillum aliqua Lorem velit officia Lorem nostrud deserunt ea. Nisi velit voluptate sit fugiat amet aliqua velit pariatur sunt in. Dolor labore irure aute ea sint consectetur sit exercitation aliquip pariatur fugiat. Non amet culpa eu eu ex qui dolor cillum culpa id esse voluptate dolor aute. Est consectetur nulla consectetur incididunt anim laboris exercitation incididunt qui cillum culpa eu. Nisi reprehenderit occaecat ex elit voluptate incididunt minim fugiat deserunt proident dolore.</p>\r\n\r\n                        <button style={btn} onClick={this.props.toggle} >Toggle Component 3</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Spring>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Component2\r\n\r\n\r\n\r\nconst c2Style = {\r\n    background: 'slateblue',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n}\r\n\r\nconst btn = \r\n{\r\n    background: \"#333\",\r\n    color: '#fff',\r\n    padding: '1rem 2rem',\r\n    border: 'none',\r\n    textTransform: 'uppercase',\r\n    margin: '15px 0',\r\n    cursor: 'pointer'\r\n}","import React from 'react'\r\n\r\nexport default function Component3() {\r\n    return (\r\n        <div style={c3Style}>\r\n            <h1>Component 3</h1>\r\n            <p>\r\n                Velit nulla non cillum deserunt veniam nisi nostrud cillum amet do. Anim amet dolore sit labore cupidatat eu qui aute aliqua. Ea cupidatat magna magna do. Reprehenderit mollit commodo dolore eu do.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst c3Style = {\r\n    background: 'steelblue',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n}\r\n","import React from 'react';\nimport { Transition, animated } from 'react-spring/renderprops';\nimport Component1 from './components/Component1';\nimport Component2 from './components/Component2';\nimport Component3 from './components/Component3';\nimport './App.css';\n\nclass App extends React.Component\n{\n  state = {\n    showComponent3: false\n  }\n\n  toggle = e =>\n  {\n    this.setState({ showComponent3: !this.state.showComponent3 })\n  }\n  render()\n  {\n    return(\n      <div className=\"App\">\n        <Component1 />\n        <Component2 toggle={this.toggle} />\n        <Transition\n          native \n          items={ this.state.showComponent3 }\n          from={{opacity: 0}}\n          enter={{opacity: 1}}\n          leave={{opacity: 0}}\n        >\n          {show => show && (props => (\n            <animated.div style={props}>\n              <Component3 />\n            </animated.div>\n          ))}\n        </Transition>\n      \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}